#!/usr/bin/env node
const fs = require('fs').promises
const Stellar = require('stellar-sdk')

Stellar.Network.useTestNetwork()

const server = new Stellar.Server('https://horizon-testnet.stellar.org')
const [pairA, pairB] = require('../pairs.json')

const createTransaction = async (pairA, pairB) => {

    const KeypairA = Stellar.Keypair.fromSecret(pairA.secretSeed)
    const KeypairB = Stellar.Keypair.fromSecret(pairB.secretSeed)

    const accountA = await server.loadAccount(pairA.publicKey)

    const paymentToB = {
        destination: pairB.publicKey,
        asset: Stellar.Asset.native(),
        amount: '20.0000000',
    }

    let transaction = new Stellar.TransactionBuilder(accountA)
        .addOperation(Stellar.Operation.payment(paymentToB))
        .build();

    transaction.sign(KeypairA) // account A signs the transaction
    transaction.sign(KeypairB) // account B signs the transaction

    const envelope = transaction.toEnvelope()

    const txEnvelopeXDR = envelope.toXDR('base64') // buffer

    await fs.writeFile('transactionSignedByA.txt', txEnvelopeXDR, { encoding: 'base64' })

}

createTransaction(pairA, pairB)
    .then(() => { console.log('ok') })
    .catch((e) => { console.error(e); throw e})
