#!/usr/bin/env node
const { Stellar, server } = require('./lib/sdk')

const { issuingAccountPair } = require('../pairs.json')

const main = async () => {

    const issuingAccount = await server.loadAccount(issuingAccountPair.publicKey)

    const thresholds = {
        masterWeight: 0, // Issuing account has a weight of 0, no rights :)
        lowThreshold: 0,
        medThreshold: 0,
        highThreshold: 0, // Means no transaction can be performed anymore on this account
    }

    let transaction = new Stellar.TransactionBuilder(issuingAccount)
        .addOperation(Stellar.Operation.setOptions(thresholds))
        .build()

    transaction.sign(Stellar.Keypair.fromSecret(issuingAccountPair.secretSeed))

    try {
        await server.submitTransaction(transaction)
    } catch (e) {
        console.log(e.response.data.extras.result_codes);
        throw e
    }

}

main()
    .then(() => { console.log('ok') })
    .catch((e) => { console.error(e); throw e})
