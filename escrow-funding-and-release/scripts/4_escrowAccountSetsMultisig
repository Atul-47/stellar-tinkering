#!/usr/bin/env node
const fs = require('fs').promises
const { Stellar, server } = require('./lib/sdk')

const [escrowPair, pairA, pairB] = require('../pairs.json')

const setEscrowMultisig = async (pairA, pairB) => {

    const escrowKeyPair = Stellar.Keypair.fromSecret(escrowPair.secretSeed)

    const escrowAccount = await server.loadAccount(escrowPair.publicKey)

    const thresholds = {
        masterWeight: 0, // Escrow account has a weight of 0, no rights :)
        lowThreshold: 1,
        medThreshold: 2, // payment is medium threshold
        highThreshold: 2,
    }

    const extraSignerA = {
        signer: {
            ed25519PublicKey: pairA.publicKey,
            weight: 1,
        }
    }

    const extraSignerB = {
        signer: {
            ed25519PublicKey: pairB.publicKey,
            weight: 1,
        }
    }

    let transaction = new Stellar.TransactionBuilder(escrowAccount)
        .addOperation(Stellar.Operation.setOptions(thresholds))
        .addOperation(Stellar.Operation.setOptions(extraSignerA))
        .addOperation(Stellar.Operation.setOptions(extraSignerB))
        .build()

    transaction.sign(escrowKeyPair)

    try {
        await server.submitTransaction(transaction)
    } catch (e) {
        console.log(e.response.data.extras.result_codes);
        throw e
    }

}

setEscrowMultisig(pairA, pairB)
    .then(() => { console.log('ok') })
    .catch((e) => { console.error(e); throw e})
