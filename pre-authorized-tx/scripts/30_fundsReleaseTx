#!/usr/bin/env node
const fs = require('fs').promises
const { BigNumber } = require('bignumber.js')
const { Stellar, server } = require('./lib/sdk')
const { escrowPair, bobPair } = require('../pairs.json')

const createEscrow = async () => {

    const { sequence } = await server.loadAccount(escrowPair.publicKey)

    const escrowAccountSequence = new BigNumber(sequence)

    const escrowAccount = new Stellar.Account(escrowPair.publicKey, escrowAccountSequence.plus(2).valueOf())

    const now = new BigNumber( Math.floor(Date.now()) ).dividedToIntegerBy(1000)

    const txOptions = {
        timebounds: {
            minTime: now.plus(300).toNumber(), // 5min from now
            maxTime: now.plus(3600).toNumber(), // 1h from now
        }
    }

    const transaction = new Stellar.TransactionBuilder(escrowAccount, txOptions)
        .addOperation(Stellar.Operation.payment({
            destination: bobPair.publicKey,
            asset: Stellar.Asset.native(),
            amount: '10.0000000',
        }))
        .build()

    const txEnvelopeXDR = transaction.toEnvelope().toXDR('base64')

    await fs.writeFile('fundsReleaseTx.x', txEnvelopeXDR, { encoding: 'base64' })

}

createEscrow()
    .then(() => { console.log('ok') })
    .catch((e) => { console.log(e.response ? e.response.data.extras.result_codes : e); throw e})